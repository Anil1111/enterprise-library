//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Practices.EnterpriseLibrary.Logging.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Practices.EnterpriseLibrary.Logging.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Events.
        /// </summary>
        internal static string AllEventsTraceSourceName {
            get {
                return ResourceManager.GetString("AllEventsTraceSourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call Logging.
        /// </summary>
        internal static string DefaultLogEntryTitle {
            get {
                return ResourceManager.GetString("DefaultLogEntryTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp: {timestamp}{newline}Message: {message}{newline}Category: {category}{newline}Priority: {priority}{newline}EventId: {eventid}{newline}Severity: {severity}{newline}Title:{title}{newline}App Domain: {localAppDomain}{newline}Thread Name: {threadName}{newline}Extended Properties: {dictionary({key} - {value}{newline})}.
        /// </summary>
        internal static string DefaultTextFormatShort {
            get {
                return ResourceManager.GetString("DefaultTextFormatShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enterprise Library Distributor Service.
        /// </summary>
        internal static string DistributorEventLoggerDefaultApplicationName {
            get {
                return ResourceManager.GetString("DistributorEventLoggerDefaultApplicationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read value for stream parameter {0}..
        /// </summary>
        internal static string ErrorCannotReadIntegerFromStream {
            get {
                return ResourceManager.GetString("ErrorCannotReadIntegerFromStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Captured tracing context can only be restored once..
        /// </summary>
        internal static string ErrorCanOnlyRestoreTracingContextOnce {
            get {
                return ResourceManager.GetString("ErrorCanOnlyRestoreTracingContextOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid entry data found in stream: the size of the entry at position {0} is larger than the available size..
        /// </summary>
        internal static string ErrorEntryDataInDiskIsInvalidLongerThanMaximum {
            get {
                return ResourceManager.GetString("ErrorEntryDataInDiskIsInvalidLongerThanMaximum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid entry data found in stream: entry has negative size at position {0}..
        /// </summary>
        internal static string ErrorEntryDataInDiskIsInvalidNegativeSize {
            get {
                return ResourceManager.GetString("ErrorEntryDataInDiskIsInvalidNegativeSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry is larger than the effective available space..
        /// </summary>
        internal static string ErrorEntryIsLargerThanTheEffectiveMaximumSize {
            get {
                return ResourceManager.GetString("ErrorEntryIsLargerThanTheEffectiveMaximumSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header mismatch found for header &apos;{0}&apos;..
        /// </summary>
        internal static string ErrorHeaderMismatch {
            get {
                return ResourceManager.GetString("ErrorHeaderMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid stream parameter {0}..
        /// </summary>
        internal static string ErrorInvalidStreamParameter {
            get {
                return ResourceManager.GetString("ErrorInvalidStreamParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Isolated storage is not available for this application. It might be disabled or in an invalid state..
        /// </summary>
        internal static string ErrorIsolatedStorageIsNotAvailable {
            get {
                return ResourceManager.GetString("ErrorIsolatedStorageIsNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging service factory is required for the listener &apos;{0}&apos;..
        /// </summary>
        internal static string ErrorLoggingServiceFactoryNotSet {
            get {
                return ResourceManager.GetString("ErrorLoggingServiceFactoryNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository file already exists..
        /// </summary>
        internal static string ErrorRepositoryFileAlreadyExists {
            get {
                return ResourceManager.GetString("ErrorRepositoryFileAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository is not available. The most likely cause is that the repository file is already being used by another instance..
        /// </summary>
        internal static string ErrorRepositoryIsNotAvailable {
            get {
                return ResourceManager.GetString("ErrorRepositoryIsNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository name was not set for listener {0}..
        /// </summary>
        internal static string ErrorRepositoryNameNotSet {
            get {
                return ResourceManager.GetString("ErrorRepositoryNameNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging Errors &amp; Warnings.
        /// </summary>
        internal static string ErrorsTraceSourceName {
            get {
                return ResourceManager.GetString("ErrorsTraceSourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The submit interval is less than 0 for the listener &apos;{0}&apos;..
        /// </summary>
        internal static string ErrorSubmitIntervalInvalidRange {
            get {
                return ResourceManager.GetString("ErrorSubmitIntervalInvalidRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The creation expression for this type registration must be a Linq New or MemberInit Expression..
        /// </summary>
        internal static string ExceptionCreationLinqExpressionMustBeNew {
            get {
                return ResourceManager.GetString("ExceptionCreationLinqExpressionMustBeNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception Information Details:.
        /// </summary>
        internal static string ExceptionDetails {
            get {
                return ResourceManager.GetString("ExceptionDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HEADER.
        /// </summary>
        internal static string ExceptionFormatterHeader {
            get {
                return ResourceManager.GetString("ExceptionFormatterHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value cannot be a null or empty string..
        /// </summary>
        internal static string ExceptionNullOrEmptyString {
            get {
                return ResourceManager.GetString("ExceptionNullOrEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StackTrace Information Details:.
        /// </summary>
        internal static string ExceptionStackTraceDetails {
            get {
                return ResourceManager.GetString("ExceptionStackTraceDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Summary for.
        /// </summary>
        internal static string ExceptionSummary {
            get {
                return ResourceManager.GetString("ExceptionSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception Type.
        /// </summary>
        internal static string ExceptionType {
            get {
                return ResourceManager.GetString("ExceptionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The writer argument should not be null when passing a configurationsource for instrumentation..
        /// </summary>
        internal static string ExceptionWriterShouldNotBeNull {
            get {
                return ResourceManager.GetString("ExceptionWriterShouldNotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failure while checking filters for log entry..
        /// </summary>
        internal static string FailureWhileCheckingFilters {
            get {
                return ResourceManager.GetString("FailureWhileCheckingFilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failure while reporting missing log categories for log entry..
        /// </summary>
        internal static string FailureWhileReportingMissingCategories {
            get {
                return ResourceManager.GetString("FailureWhileReportingMissingCategories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failure while sending log entry to the TraceListeners..
        /// </summary>
        internal static string FailureWhileTracing {
            get {
                return ResourceManager.GetString("FailureWhileTracing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Evaluation of filter &apos;{0}&apos; failed and the filter will be ignored. See summary information below for more information. Should this problem persist, stop the service and check the configuration file(s) for possible error(s) in the configuration of the categories and sinks..
        /// </summary>
        internal static string FilterEvaluationFailed {
            get {
                return ResourceManager.GetString("FilterEvaluationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ProcessQueueMessage - additional information.
        /// </summary>
        internal static string FilterEvaluationFailed2 {
            get {
                return ResourceManager.GetString("FilterEvaluationFailed2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Message: 
        ///{0}.
        /// </summary>
        internal static string FilterEvaluationFailed3 {
            get {
                return ResourceManager.GetString("FilterEvaluationFailed3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to read intrinsic property.  Error message: {0}.
        /// </summary>
        internal static string IntrinsicPropertyError {
            get {
                return ResourceManager.GetString("IntrinsicPropertyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp: {0}
        ///Message: {1}
        ///Category: {2}
        ///Severity: {3}.
        /// </summary>
        internal static string LogEntry_SimplifiedToString {
            get {
                return ResourceManager.GetString("LogEntry_SimplifiedToString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be either 0, or larger than {0} KB..
        /// </summary>
        internal static string LogEntryMessageStoreMaxSizeMustBeEitherZeroOrLargerThanZero {
            get {
                return ResourceManager.GetString("LogEntryMessageStoreMaxSizeMustBeEitherZeroOrLargerThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LoggingServiceFactory is not correctly initialized. EndpointConfigurationName must be set prior to usage..
        /// </summary>
        internal static string LoggingServiceFactory_EndpointConfigurationNameNotSet {
            get {
                return ResourceManager.GetString("LoggingServiceFactory_EndpointConfigurationNameNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The instance of ILogWriterUpdateContext used to apply changes is not current..
        /// </summary>
        internal static string LogWriterUpdateContext_IsNotCurrent {
            get {
                return ResourceManager.GetString("LogWriterUpdateContext_IsNotCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MaxSizeInKilobytes cannot be changed. The current running instance does not have write access to the repository..
        /// </summary>
        internal static string MaxSizeInKilobytesCannotBeChanged {
            get {
                return ResourceManager.GetString("MaxSizeInKilobytesCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no explicit mapping for the categories &apos;{0}&apos;. The log entry was: 
        ///{1}.
        /// </summary>
        internal static string MissingCategories {
            get {
                return ResourceManager.GetString("MissingCategories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unprocessed Category.
        /// </summary>
        internal static string NotProcessedTraceSourceName {
            get {
                return ResourceManager.GetString("NotProcessedTraceSourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter must implement type &apos;{0}&apos;..
        /// </summary>
        internal static string ParameterMustImplementType {
            get {
                return ResourceManager.GetString("ParameterMustImplementType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing of the message failed. See summary information below for more information. Should this problem persist, stop the service and check the configuration file(s) for possible error(s) in the configuration of the categories and sinks..
        /// </summary>
        internal static string ProcessMessageFailed {
            get {
                return ResourceManager.GetString("ProcessMessageFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ProcessQueueMessage - additional information.
        /// </summary>
        internal static string ProcessMessageFailed2 {
            get {
                return ResourceManager.GetString("ProcessMessageFailed2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Message: 
        ///{0}.
        /// </summary>
        internal static string ProcessMessageFailed3 {
            get {
                return ResourceManager.GetString("ProcessMessageFailed3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access failed.
        /// </summary>
        internal static string PropertyAccessFailed {
            get {
                return ResourceManager.GetString("PropertyAccessFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Error: property {0} threw an exception&gt;.
        /// </summary>
        internal static string ReflectedPropertyTokenException {
            get {
                return ResourceManager.GetString("ReflectedPropertyTokenException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Error: property {0} is indexer&gt;.
        /// </summary>
        internal static string ReflectedPropertyTokenIndexer {
            get {
                return ResourceManager.GetString("ReflectedPropertyTokenIndexer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Error: property {0} not found&gt;.
        /// </summary>
        internal static string ReflectedPropertyTokenNotFound {
            get {
                return ResourceManager.GetString("ReflectedPropertyTokenNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Error: property {0} is not readable&gt;.
        /// </summary>
        internal static string ReflectedPropertyTokenNotReadable {
            get {
                return ResourceManager.GetString("ReflectedPropertyTokenNotReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tracing to LogSource &apos;{0}&apos; failed. Exception &apos;{1}&apos; (&quot;{2}&quot;) was thrown when trying to create the remote service&apos;s client proxy..
        /// </summary>
        internal static string RemoteServiceTraceListener_ReportProxyError_MessageFormat {
            get {
                return ResourceManager.GetString("RemoteServiceTraceListener_ReportProxyError_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following log entries failed to submit and will not be automatically resubmitted:
        ///{0}.
        /// </summary>
        internal static string RemoteServiceTraceListener_ReportTracingError_EntriesSummaryMessageFormat {
            get {
                return ResourceManager.GetString("RemoteServiceTraceListener_ReportTracingError_EntriesSummaryMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tracing to LogSource &apos;{0}&apos; failed. Exception &apos;{1}&apos; (&quot;{2}&quot;) was thrown when trying to submit log entries to the server..
        /// </summary>
        internal static string RemoteServiceTraceListener_ReportTracingError_GeneralExceptionMessageFormat {
            get {
                return ResourceManager.GetString("RemoteServiceTraceListener_ReportTracingError_GeneralExceptionMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: {1}.
        /// </summary>
        internal static string RemoteServiceTraceListener_ReportTracingError_LogEntryFormat {
            get {
                return ResourceManager.GetString("RemoteServiceTraceListener_ReportTracingError_LogEntryFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}....
        /// </summary>
        internal static string RemoteServiceTraceListener_ReportTracingError_ShortenedLongLogEntryMessageFormat {
            get {
                return ResourceManager.GetString("RemoteServiceTraceListener_ReportTracingError_ShortenedLongLogEntryMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resize failed. Could not grab a file lock on the isolated storage after it has been removed and prior to re-initialization. Data loss may have occurred..
        /// </summary>
        internal static string ResizeRepositoryFailed {
            get {
                return ResourceManager.GetString("ResizeRepositoryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TraceListener with name &apos;{0}&apos; is not defined in configuration or not active..
        /// </summary>
        internal static string TraceListenersReferenceCollection_InvalidName {
            get {
                return ResourceManager.GetString("TraceListenersReferenceCollection_InvalidName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End Trace: Activity &apos;{0}&apos; in method &apos;{1}&apos; at {2} ticks (elapsed time: {3} seconds).
        /// </summary>
        internal static string Tracer_EndMessageFormat {
            get {
                return ResourceManager.GetString("Tracer_EndMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Trace: Activity &apos;{0}&apos; in method &apos;{1}&apos; at {2} ticks.
        /// </summary>
        internal static string Tracer_StartMessageFormat {
            get {
                return ResourceManager.GetString("Tracer_StartMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tracing to LogSource &apos;{0}&apos; failed. Processing for other sources will continue. See summary information below for more information. Should this problem persist, stop the service and check the configuration file(s) for possible error(s) in the configuration of the categories and sinks..
        /// </summary>
        internal static string TraceSourceFailed {
            get {
                return ResourceManager.GetString("TraceSourceFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ProcessQueueMessage - additional information.
        /// </summary>
        internal static string TraceSourceFailed2 {
            get {
                return ResourceManager.GetString("TraceSourceFailed2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Message: 
        ///{0}.
        /// </summary>
        internal static string TraceSourceFailed3 {
            get {
                return ResourceManager.GetString("TraceSourceFailed3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown failure..
        /// </summary>
        internal static string UnknownFailure {
            get {
                return ResourceManager.GetString("UnknownFailure", resourceCulture);
            }
        }
    }
}
