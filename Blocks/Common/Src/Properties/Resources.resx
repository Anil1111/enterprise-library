<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CannotStartConfigurationDownload" xml:space="preserve">
    <value>Enterprise Library asynchronous configuration is already in progress. Only one asynchronous configuration can be done at a time.</value>
  </data>
  <data name="ConfigurationElementCollection_CannotInsert" xml:space="preserve">
    <value>Cannot add duplicate item to the collection.</value>
  </data>
  <data name="EntlibNotYetConfigured" xml:space="preserve">
    <value>Enterprise Library is in the process of downloading configuration information. It may not be used until this process is complete.</value>
  </data>
  <data name="ExceptionAvailableSpaceNotEnough" xml:space="preserve">
    <value>The available space is not enough to store the specified content.</value>
  </data>
  <data name="ExceptionCanNotConvertDateTime" xml:space="preserve">
    <value>The DateTimeTypeConverter can only convert DateTime values.</value>
  </data>
  <data name="ExceptionCanNotConvertType" xml:space="preserve">
    <value>The AssemblyQualifiedTypeNameConverter can only convert values of type '{0}'.</value>
  </data>
  <data name="ExceptionIdDoesNotExistInFileSystem" xml:space="preserve">
    <value>The specified ID does not exist in the file system.</value>
  </data>
  <data name="ExceptionInvalidType" xml:space="preserve">
    <value>The type '{0}' cannot be resolved. Please verify the spelling is correct or that the full type name is provided.</value>
  </data>
  <data name="ExceptionOverwriteOverflow" xml:space="preserve">
    <value>The content to overwrite overflows the current allocated disk space. Use overwrite method to overwrite a portion of the content that is of fixed size, otherwise remove the content and re-add it.</value>
  </data>
  <data name="ExceptionRegistrationServiceTypeIsNotCompatible" xml:space="preserve">
    <value>Service type of {0} is not compatible with supplied expression type of {1}</value>
  </data>
  <data name="ExceptionRegistrationTypeExpressionMustBeNewLambda" xml:space="preserve">
    <value>Lambda expression must construct a new instance of a type.</value>
  </data>
  <data name="ExceptionSizeIsNotCurrent" xml:space="preserve">
    <value>This property cannot be queried until at least one ReadAll() call is made.</value>
  </data>
  <data name="ExceptionStringNullOrEmpty" xml:space="preserve">
    <value>The value cannot be null or an empty string.</value>
  </data>
  <data name="ExceptionTypeMustDeriveFromType" xml:space="preserve">
    <value>Type must be derived from '{0}'.</value>
  </data>
  <data name="ExceptionTypeMustImplementInterface" xml:space="preserve">
    <value>Type must implement interface '{0}'.</value>
  </data>
  <data name="ExceptionUnrecognizedContainerMarkerMethod" xml:space="preserve">
    <value>Unrecognized Container marker method.</value>
  </data>
  <data name="ExceptionUnrecognizedDependencyParameterType" xml:space="preserve">
    <value>Unrecognized DependencyParameter type: {0}</value>
  </data>
  <data name="ExceptionUnsupportedBindingExpressionType" xml:space="preserve">
    <value>The initialization expression for property {0} is not supported: only simple bindings are supported.</value>
  </data>
  <data name="ExceptionUnsupportedDateTimeFormat" xml:space="preserve">
    <value>The DateTime '{0}' cannot be parsed. Please verify the DateTime format is correct. Supported format are en-US and universal format (ex: "yyyy'-'MM'-'dd'T'HH':'mm':'ss"). The time part is optional.</value>
  </data>
  <data name="ExceptionWriteNotSupportedInReadOnlyStorage" xml:space="preserve">
    <value>The storage was opened in read-only mode because it was being used by another instance at creation time.</value>
  </data>
  <data name="ExceptionXamlConfigurationInvalidFormat" xml:space="preserve">
    <value>The configuration content has an invalid format. The content should be in XAML format and the root element must be an instance of IDictionary. Each entry in the dictionary should correspond to each configuration section.</value>
  </data>
  <data name="ExceptionXamlConfigurationResourceNotFound" xml:space="preserve">
    <value>The configuration resource stream cannot be found at URI '{0}'.</value>
  </data>
  <data name="StorageAccessor_GuardMaxSize" xml:space="preserve">
    <value>The storage cannot be smaller than {0}.</value>
  </data>
  <data name="StorageDoesNotExist" xml:space="preserve">
    <value>The storage you are trying to open does not currently exist.</value>
  </data>
</root>