//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Practices.EnterpriseLibrary.Common.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Practices.EnterpriseLibrary.Common.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enterprise Library asynchronous configuration is already in progress. Only one asynchronous configuration can be done at a time..
        /// </summary>
        public static string CannotStartConfigurationDownload {
            get {
                return ResourceManager.GetString("CannotStartConfigurationDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add duplicate item to the collection..
        /// </summary>
        public static string ConfigurationElementCollection_CannotInsert {
            get {
                return ResourceManager.GetString("ConfigurationElementCollection_CannotInsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enterprise Library is in the process of downloading configuration information. It may not be used until this process is complete..
        /// </summary>
        public static string EntlibNotYetConfigured {
            get {
                return ResourceManager.GetString("EntlibNotYetConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The available space is not enough to store the specified content..
        /// </summary>
        public static string ExceptionAvailableSpaceNotEnough {
            get {
                return ResourceManager.GetString("ExceptionAvailableSpaceNotEnough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DateTimeTypeConverter can only convert DateTime values..
        /// </summary>
        public static string ExceptionCanNotConvertDateTime {
            get {
                return ResourceManager.GetString("ExceptionCanNotConvertDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AssemblyQualifiedTypeNameConverter can only convert values of type &apos;{0}&apos;..
        /// </summary>
        public static string ExceptionCanNotConvertType {
            get {
                return ResourceManager.GetString("ExceptionCanNotConvertType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified ID does not exist in the file system..
        /// </summary>
        public static string ExceptionIdDoesNotExistInFileSystem {
            get {
                return ResourceManager.GetString("ExceptionIdDoesNotExistInFileSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; cannot be resolved. Please verify the spelling is correct or that the full type name is provided..
        /// </summary>
        public static string ExceptionInvalidType {
            get {
                return ResourceManager.GetString("ExceptionInvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content to overwrite overflows the current allocated disk space. Use overwrite method to overwrite a portion of the content that is of fixed size, otherwise remove the content and re-add it..
        /// </summary>
        public static string ExceptionOverwriteOverflow {
            get {
                return ResourceManager.GetString("ExceptionOverwriteOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service type of {0} is not compatible with supplied expression type of {1}.
        /// </summary>
        public static string ExceptionRegistrationServiceTypeIsNotCompatible {
            get {
                return ResourceManager.GetString("ExceptionRegistrationServiceTypeIsNotCompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lambda expression must construct a new instance of a type..
        /// </summary>
        public static string ExceptionRegistrationTypeExpressionMustBeNewLambda {
            get {
                return ResourceManager.GetString("ExceptionRegistrationTypeExpressionMustBeNewLambda", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property cannot be queried until at least one ReadAll() call is made..
        /// </summary>
        public static string ExceptionSizeIsNotCurrent {
            get {
                return ResourceManager.GetString("ExceptionSizeIsNotCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value cannot be null or an empty string..
        /// </summary>
        public static string ExceptionStringNullOrEmpty {
            get {
                return ResourceManager.GetString("ExceptionStringNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type must be derived from &apos;{0}&apos;..
        /// </summary>
        public static string ExceptionTypeMustDeriveFromType {
            get {
                return ResourceManager.GetString("ExceptionTypeMustDeriveFromType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type must implement interface &apos;{0}&apos;..
        /// </summary>
        public static string ExceptionTypeMustImplementInterface {
            get {
                return ResourceManager.GetString("ExceptionTypeMustImplementInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized Container marker method..
        /// </summary>
        public static string ExceptionUnrecognizedContainerMarkerMethod {
            get {
                return ResourceManager.GetString("ExceptionUnrecognizedContainerMarkerMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized DependencyParameter type: {0}.
        /// </summary>
        public static string ExceptionUnrecognizedDependencyParameterType {
            get {
                return ResourceManager.GetString("ExceptionUnrecognizedDependencyParameterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The initialization expression for property {0} is not supported: only simple bindings are supported..
        /// </summary>
        public static string ExceptionUnsupportedBindingExpressionType {
            get {
                return ResourceManager.GetString("ExceptionUnsupportedBindingExpressionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DateTime &apos;{0}&apos; cannot be parsed. Please verify the DateTime format is correct. Supported format are en-US and universal format (ex: &quot;yyyy&apos;-&apos;MM&apos;-&apos;dd&apos;T&apos;HH&apos;:&apos;mm&apos;:&apos;ss&quot;). The time part is optional..
        /// </summary>
        public static string ExceptionUnsupportedDateTimeFormat {
            get {
                return ResourceManager.GetString("ExceptionUnsupportedDateTimeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage was opened in read-only mode because it was being used by another instance at creation time..
        /// </summary>
        public static string ExceptionWriteNotSupportedInReadOnlyStorage {
            get {
                return ResourceManager.GetString("ExceptionWriteNotSupportedInReadOnlyStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration content has an invalid format. The content should be in XAML format and the root element must be an instance of IDictionary. Each entry in the dictionary should correspond to each configuration section..
        /// </summary>
        public static string ExceptionXamlConfigurationInvalidFormat {
            get {
                return ResourceManager.GetString("ExceptionXamlConfigurationInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration resource stream cannot be found at URI &apos;{0}&apos;..
        /// </summary>
        public static string ExceptionXamlConfigurationResourceNotFound {
            get {
                return ResourceManager.GetString("ExceptionXamlConfigurationResourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage cannot be smaller than {0}..
        /// </summary>
        public static string StorageAccessor_GuardMaxSize {
            get {
                return ResourceManager.GetString("StorageAccessor_GuardMaxSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage you are trying to open does not currently exist..
        /// </summary>
        public static string StorageDoesNotExist {
            get {
                return ResourceManager.GetString("StorageDoesNotExist", resourceCulture);
            }
        }
    }
}
