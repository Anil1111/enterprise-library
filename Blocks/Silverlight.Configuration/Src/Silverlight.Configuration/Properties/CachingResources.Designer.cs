//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Practices.EnterpriseLibrary.Silverlight.Configuration.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CachingResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CachingResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Practices.EnterpriseLibrary.Silverlight.Configuration.Properties.Cachin" +
                            "gResources", typeof(CachingResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In-Memory Cache.
        /// </summary>
        internal static string AddCachingBlockCommandDefaultCacheName {
            get {
                return ResourceManager.GetString("AddCachingBlockCommandDefaultCacheName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Caching Settings for Silverlight.
        /// </summary>
        internal static string AddCachingSettings {
            get {
                return ResourceManager.GetString("AddCachingSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object Caches.
        /// </summary>
        internal static string CachingSettingsCachesDescription {
            get {
                return ResourceManager.GetString("CachingSettingsCachesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object Caches.
        /// </summary>
        internal static string CachingSettingsCachesDisplayName {
            get {
                return ResourceManager.GetString("CachingSettingsCachesDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default Object Cache instance to used when code does not specify a named Object Cache.
        /// </summary>
        internal static string CachingSettingsDefaultCacheDescription {
            get {
                return ResourceManager.GetString("CachingSettingsDefaultCacheDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Cache Name.
        /// </summary>
        internal static string CachingSettingsDefaultCacheDisplayName {
            get {
                return ResourceManager.GetString("CachingSettingsDefaultCacheDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration settings for the Caching for Silverlight Application Block.
        /// </summary>
        internal static string CachingSettingsDescription {
            get {
                return ResourceManager.GetString("CachingSettingsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Caching Settings for Silverlight.
        /// </summary>
        internal static string CachingSettingsDisplayName {
            get {
                return ResourceManager.GetString("CachingSettingsDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A custom class that persists the cached data, and is added to Enterprise Library..
        /// </summary>
        internal static string CustomCacheDataDescription {
            get {
                return ResourceManager.GetString("CustomCacheDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Cache.
        /// </summary>
        internal static string CustomCacheDataDisplayName {
            get {
                return ResourceManager.GetString("CustomCacheDataDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of the Name Type Configuration Element..
        /// </summary>
        internal static string CustomCacheDataTypeNameDescription {
            get {
                return ResourceManager.GetString("CustomCacheDataTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type Name.
        /// </summary>
        internal static string CustomCacheDataTypeNameDisplayName {
            get {
                return ResourceManager.GetString("CustomCacheDataTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frequency of expiration polling cycle..
        /// </summary>
        internal static string ExpirationPollingIntervalDescription {
            get {
                return ResourceManager.GetString("ExpirationPollingIntervalDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expiration Polling Interval.
        /// </summary>
        internal static string ExpirationPollingIntervalDisplayName {
            get {
                return ResourceManager.GetString("ExpirationPollingIntervalDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InMemoryCache has many properties and methods for accessing the cache that will be familiar to you if you have used the Desktop&apos;s MemoryCache class. It is somewhat similar to the System.Runtime.Caching.MemoryCache class available in the .NET Framework in the Desktop..
        /// </summary>
        internal static string InMemoryCacheDataDescription {
            get {
                return ResourceManager.GetString("InMemoryCacheDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In-Memory Cache.
        /// </summary>
        internal static string InMemoryCacheDataDisplayName {
            get {
                return ResourceManager.GetString("InMemoryCacheDataDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Just like the InMemoryCache, the IsolatedStorage cache has many properties and methods for accessing the cache that will be familiar to you if you have used the desktop&apos;s System.Runtime.Caching.MemoryCache class. All the items are saved in-memory but are also saved to the Isolated Cache of Silverlight at the exact same time, allowing to easily reloads the object when the application starts..
        /// </summary>
        internal static string IsolatedStorageCacheDataDescription {
            get {
                return ResourceManager.GetString("IsolatedStorageCacheDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Isolated Storage Cache.
        /// </summary>
        internal static string IsolatedStorageCacheDataDisplayName {
            get {
                return ResourceManager.GetString("IsolatedStorageCacheDataDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of items to be left after scavenging..
        /// </summary>
        internal static string ItemsLeftAfterScavengingDescription {
            get {
                return ResourceManager.GetString("ItemsLeftAfterScavengingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Items left after scavenging.
        /// </summary>
        internal static string ItemsLeftAfterScavengingDisplayName {
            get {
                return ResourceManager.GetString("ItemsLeftAfterScavengingDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of items in cache before an add causes scavenging to take place..
        /// </summary>
        internal static string MaxItemsBeforeScavengingDescription {
            get {
                return ResourceManager.GetString("MaxItemsBeforeScavengingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max items before scavenging.
        /// </summary>
        internal static string MaxItemsBeforeScavengingDisplayName {
            get {
                return ResourceManager.GetString("MaxItemsBeforeScavengingDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum size in bytes before replacing previous cached items..
        /// </summary>
        internal static string MaxSizeInBytesDescription {
            get {
                return ResourceManager.GetString("MaxSizeInBytesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max size (in bytes).
        /// </summary>
        internal static string MaxSizeInBytesDisplayName {
            get {
                return ResourceManager.GetString("MaxSizeInBytesDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Percentage of quota after scavenging..
        /// </summary>
        internal static string PercentOfQuotaUsedAfterScavengingDescription {
            get {
                return ResourceManager.GetString("PercentOfQuotaUsedAfterScavengingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Percentage of quota after scavenging.
        /// </summary>
        internal static string PercentOfQuotaUsedAfterScavengingDisplayName {
            get {
                return ResourceManager.GetString("PercentOfQuotaUsedAfterScavengingDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Percentage of quota used before scavenging..
        /// </summary>
        internal static string PercentOfQuotaUsedBeforeScavengingDescription {
            get {
                return ResourceManager.GetString("PercentOfQuotaUsedBeforeScavengingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Percentage of quota used before scavenging.
        /// </summary>
        internal static string PercentOfQuotaUsedBeforeScavengingDisplayName {
            get {
                return ResourceManager.GetString("PercentOfQuotaUsedBeforeScavengingDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type name of the serializer to use for cache entries serialization..
        /// </summary>
        internal static string SerializerTypeNameDescription {
            get {
                return ResourceManager.GetString("SerializerTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serializer type name.
        /// </summary>
        internal static string SerializerTypeNameDisplayName {
            get {
                return ResourceManager.GetString("SerializerTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum size currently specified for the Isolated Storage Cache is above the default Silverlight Isolated Storage size of 1 MB. Note that the minimum value between the maximum size and the Silverlight Isolated Storage quota will be used as the actual maximum cache size..
        /// </summary>
        internal static string ValidationMaxSizeIsOverSilverlightDefaultQuota {
            get {
                return ResourceManager.GetString("ValidationMaxSizeIsOverSilverlightDefaultQuota", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value must be over 0..
        /// </summary>
        internal static string ValidationNumericValueIsOverZero {
            get {
                return ResourceManager.GetString("ValidationNumericValueIsOverZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value must be between 0 and 100..
        /// </summary>
        internal static string ValidationPercentage {
            get {
                return ResourceManager.GetString("ValidationPercentage", resourceCulture);
            }
        }
    }
}
