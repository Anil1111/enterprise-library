//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Practices.EnterpriseLibrary.Caching.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Practices.EnterpriseLibrary.Caching.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid operation on entry that is not persisted..
        /// </summary>
        internal static string ExceptionEntryNotPersisted {
            get {
                return ResourceManager.GetString("ExceptionEntryNotPersisted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one callback can be specified.  Either RemovedCallback or UpdateCallback must be null..
        /// </summary>
        internal static string ExceptionInvalidCallbackCombination {
            get {
                return ResourceManager.GetString("ExceptionInvalidCallbackCombination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AbsoluteExpiration must be DateTimeOffset.MaxValue or SlidingExpiration must be TimeSpan.Zero..
        /// </summary>
        internal static string ExceptionInvalidExpirationCombination {
            get {
                return ResourceManager.GetString("ExceptionInvalidExpirationCombination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The percentOfQuotaUsedBeforeScavenging threshold value ({0:F2}) cannot be lower than the percentOfQuotaUsedAfterScavenging threshold value ({1:F2})..
        /// </summary>
        internal static string ExceptionPercentOfQuotaRangeComparison {
            get {
                return ResourceManager.GetString("ExceptionPercentOfQuotaRangeComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of items left in the cache after scavenging must be greater than zero..
        /// </summary>
        internal static string ItemsLeftAfterScavengingMustBePositive {
            get {
                return ResourceManager.GetString("ItemsLeftAfterScavengingMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of items left in the cache after scavenging must be less than or equal to the number of items allowed before scavenging..
        /// </summary>
        internal static string ItemsLeftMustBeLessThanMaxItemsBefore {
            get {
                return ResourceManager.GetString("ItemsLeftMustBeLessThanMaxItemsBefore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of items allowed in the cache before scavenging happens must be greater than zero..
        /// </summary>
        internal static string MaxItemsBeforeScavengingMustBePositive {
            get {
                return ResourceManager.GetString("MaxItemsBeforeScavengingMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This cache object does not support regions..
        /// </summary>
        internal static string RegionsNotSupported {
            get {
                return ResourceManager.GetString("RegionsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The serialized value is invalid: serialized value length is different than the logical size..
        /// </summary>
        internal static string Serializer_ValueLengthDoesNotMatchMetadata {
            get {
                return ResourceManager.GetString("Serializer_ValueLengthDoesNotMatchMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The serialized value is invalid: too short..
        /// </summary>
        internal static string Serializer_ValueTooShort {
            get {
                return ResourceManager.GetString("Serializer_ValueTooShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SerializerType value must be a type that implements IIsolatedStorageCacheEntrySerializer and has a default constructor..
        /// </summary>
        internal static string SerializerType_DerivedTypeNotCorrect {
            get {
                return ResourceManager.GetString("SerializerType_DerivedTypeNotCorrect", resourceCulture);
            }
        }
    }
}
