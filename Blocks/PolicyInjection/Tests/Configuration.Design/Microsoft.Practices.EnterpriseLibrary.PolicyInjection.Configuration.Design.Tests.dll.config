<configuration>
  <configSections>
    <section name="policyInjection" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.Configuration.PolicyInjectionSettings, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
  </configSections>
  <policyInjection>
    <injectors defaultInjector="Remoting Policy Injector">
      <add type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.RemotingInterception.RemotingPolicyInjector, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="Remoting Policy Injector" />
    </injectors>
    <policies>
      <add name="Policy One">
        <matchingRules>
          <add match="AssemblyName" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.MatchingRules.AssemblyMatchingRule, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Assembly Matching Rule" />
          <add searchInheritanceChain="true" attributeType="CustomAttributeName"
            type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.MatchingRules.CustomAttributeMatchingRule, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Custom Attribute Matching Rule" />
          <add Attribute1="Value1" type="Custom Matching Rule" name="Custom Matching Rule" />
          <add type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.MatchingRules.MemberNameMatchingRule, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Member Name Matching Rule">
            <matches>
              <add match="MemberName1" ignoreCase="false" />
              <add match="MemberName2" ignoreCase="true" />
            </matches>
          </add>
          <add match="MethodName" ignoreCase="true" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.MatchingRules.MethodSignatureMatchingRule, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Method Signature Matching Rule">
            <parameters>
              <parameter name="p1" typeName="System.String" />
              <parameter name="p2" typeName="Object3" />
            </parameters>
          </add>
          <add type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.MatchingRules.NamespaceMatchingRule, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Namespace Matching Rule">
            <matches>
              <add match="Namespace1" ignoreCase="false" />
              <add match="nAmEspace2" ignoreCase="true" />
            </matches>
          </add>
          <add type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.MatchingRules.PropertyMatchingRule, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Property Matching Rule">
            <matches>
              <add matchOption="Get" match="Property1" ignoreCase="false" />
              <add matchOption="Set" match="Property2" ignoreCase="false" />
            </matches>
          </add>
          <add match="ReturnType" ignoreCase="false" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.MatchingRules.ReturnTypeMatchingRule, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Return Type Matching Rule" />
          <add match="TagValue" ignoreCase="false" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.MatchingRules.TagAttributeMatchingRule, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Tag Attribute Matching Rule" />
          <add type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.MatchingRules.TypeMatchingRule, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Type Matching Rule">
            <matches>
              <add match="TypetoMatch" ignoreCase="false" />
              <add match="tYpe" ignoreCase="true" />
            </matches>
          </add>
          <add type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.MatchingRules.ParameterTypeMatchingRule, Microsoft.Practices.EnterpriseLibrary.PolicyInjection"
            name="Parameter Type Matching Rule">
            <matches>
              <add match="System.String" ignoreCase="false" parameterKind="Input" />
              <add match="int32" ignoreCase="true" parameterKind="InputOrOutput" />
              <add match="DateTime" parameterKind="ReturnValue" />
            </matches>
          </add>
        </matchingRules>
        <handlers>
          <add authorizationProvider="" operationName="operationName" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.CallHandlers.AuthorizationCallHandler, Microsoft.Practices.EnterpriseLibrary.PolicyInjection.CallHandlers, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Authorization Call Handler" />
          <add expirationTime="00:05:00" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.CallHandlers.CachingCallHandler, Microsoft.Practices.EnterpriseLibrary.PolicyInjection.CallHandlers, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Caching Call Handler" />
          <add type="CallHandlerType" name="Custom Call Handler" />
          <add exceptionPolicyName="ExceptionPolicyName" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.CallHandlers.ExceptionCallHandler, Microsoft.Practices.EnterpriseLibrary.PolicyInjection.CallHandlers, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Exception Call Handler" />
          <add logBehavior="BeforeAndAfter" beforeMessage="" afterMessage=""
            includeParameterValues="false" includeCallStack="false" includeCallTime="false"
            priority="0" severity="Information" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.CallHandlers.LogCallHandler, Microsoft.Practices.EnterpriseLibrary.PolicyInjection.CallHandlers, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Log Call Handler" />
          <add categoryName="" instanceName="" useTotalCounter="false"
            incrementNumberOfCalls="false" incrementCallsPerSecond="false"
            incrementAverageCallDuration="false" incrementTotalExceptions="false"
            incrementExceptionsPerSecond="false" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.CallHandlers.PerformanceCounterCallHandler, Microsoft.Practices.EnterpriseLibrary.PolicyInjection.CallHandlers, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Performance Counter Call Handler" />
          <add ruleSet="" specificationSource="Both" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.CallHandlers.ValidationCallHandler, Microsoft.Practices.EnterpriseLibrary.PolicyInjection.CallHandlers, Version=4.0.0.1010, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
            name="Validation Call Handler" />
        </handlers>
      </add>
      <add name="Policy Two" />
    </policies>
  </policyInjection>
</configuration>
