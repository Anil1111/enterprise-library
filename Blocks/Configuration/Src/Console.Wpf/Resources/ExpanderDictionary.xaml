<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					mc:Ignorable="d"
					xmlns:Controls="clr-namespace:Console.Wpf.Controls">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Console.Wpf;component/Resources/Brushes.xaml" />
		<ResourceDictionary Source="/Console.Wpf;component/Resources/Converters.xaml" />
		<ResourceDictionary Source="/Console.Wpf;component/Resources/AdderStyles.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<SolidColorBrush x:Key="DisabledUpDownArrowFill"
					 Color="#FF676767" />
	<ControlTemplate x:Key="ReorderUpButton"
					 TargetType="{x:Type Button}">
		<Grid HorizontalAlignment="Left"
			  VerticalAlignment="Top" 
			  Width="18" 
			  Height="8"
			  Background="Transparent">
			<Path HorizontalAlignment="Center"
				  x:Name="Arrow"
				  VerticalAlignment="Center"
				  Fill="{TemplateBinding Foreground}"
				  Data="M 0 0 L 4 4 L 8 0 Z"
				  RenderTransformOrigin="0.5,0.5"
				  Stretch="Fill"
				  Width="10"
				  Height="8">
				<Path.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-180" />
						<TranslateTransform />
					</TransformGroup>
				</Path.RenderTransform>
			</Path>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsFocused"
					 Value="True">
				<Setter Property="RenderTransform"
						TargetName="Arrow">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform ScaleX="1.5"
											ScaleY="1.5" />
							<SkewTransform />
							<RotateTransform Angle="-180" />
							<TranslateTransform />
						</TransformGroup>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="RenderTransform"
						TargetName="Arrow">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform ScaleX="1.5"
											ScaleY="1.5" />
							<SkewTransform />
							<RotateTransform Angle="-180" />
							<TranslateTransform />
						</TransformGroup>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="true" />

			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="Fill"
						TargetName="Arrow"
						Value="{DynamicResource DisabledUpDownArrowFill}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="ReorderDownButton"
					 TargetType="{x:Type Button}">
		<Grid HorizontalAlignment="Left"
			  VerticalAlignment="Top" 
			  Width="18" 
			  Height="8"
			  Background="Transparent">
			<Path HorizontalAlignment="Center"
				  x:Name="Arrow"
				  VerticalAlignment="Center"
				  Fill="{TemplateBinding Foreground}"
				  Data="M 0 0 L 4 4 L 8 0 Z"
				  RenderTransformOrigin="0.5,0.5"
				  Stretch="Fill"
				  Width="12"
				  Height="8">
				<Path.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="0" />
						<TranslateTransform />
					</TransformGroup>
				</Path.RenderTransform>
			</Path>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsFocused"
					 Value="True">
				<Setter Property="RenderTransform"
						TargetName="Arrow">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform ScaleX="1.5"
											ScaleY="1.5" />
							<SkewTransform />
							<RotateTransform Angle="0" />
							<TranslateTransform />
						</TransformGroup>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="RenderTransform"
						TargetName="Arrow">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform ScaleX="1.5"
											ScaleY="1.5" />
							<SkewTransform />
							<RotateTransform Angle="0" />
							<TranslateTransform />
						</TransformGroup>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="true" />

			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="Fill"
						TargetName="Arrow"
						Value="{DynamicResource DisabledUpDownArrowFill}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="ExpanderToggleButton"
					 TargetType="{x:Type ToggleButton}">
		<Grid>
			<Path HorizontalAlignment="Stretch"
				  x:Name="Close_Arrow"
				  VerticalAlignment="Stretch"
				  Fill="{TemplateBinding Foreground}"
				  Data="F1M11.258,1L21.65,19 0.866,19 11.258,1z"
				  RenderTransformOrigin="0.5,0.5"
				  Visibility="Collapsed"
				  Stretch="Fill"
				  Width="12"
				  Height="6">
				<Path.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="135" />
						<TranslateTransform />
					</TransformGroup>
				</Path.RenderTransform>
			</Path>
			<Path Visibility="Visible"
				  HorizontalAlignment="Stretch"
				  x:Name="Open_Arrow"
				  VerticalAlignment="Stretch"
				  Fill="{TemplateBinding Foreground}"
				  Data="F1M11.258,1L21.65,19 0.866,19 11.258,1z"
				  RenderTransformOrigin="0.5,0.5"
				  Stretch="Fill"
				  Width="12"
				  Height="6">
				<Path.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="90" />
						<TranslateTransform X="0" Y="0" />
					</TransformGroup>
				</Path.RenderTransform>
			</Path>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsFocused"
					 Value="True">
				<Setter Property="RenderTransform"
						TargetName="Close_Arrow">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform ScaleX="1.3"
											ScaleY="1.3" />
							<SkewTransform />
							<RotateTransform Angle="-45" />
							<TranslateTransform />
						</TransformGroup>
					</Setter.Value>
				</Setter>
				<Setter Property="RenderTransform"
						TargetName="Open_Arrow">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform ScaleX="1.3"
											ScaleY="1.3" />
							<SkewTransform />
							<RotateTransform Angle="90" />
							<TranslateTransform />
						</TransformGroup>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="RenderTransform"
						TargetName="Open_Arrow">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform ScaleX="1.3"
											ScaleY="1.3" />
							<SkewTransform />
							<RotateTransform Angle="90" />
							<TranslateTransform />
						</TransformGroup>
					</Setter.Value>
				</Setter>
				<Setter Property="RenderTransform"
						TargetName="Close_Arrow">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform ScaleX="1.3"
											ScaleY="1.3" />
							<SkewTransform />
							<RotateTransform Angle="135" />
							<TranslateTransform />
						</TransformGroup>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="true" />
			<Trigger Property="IsChecked"
					 Value="true">
				<Setter Property="Visibility"
						TargetName="Close_Arrow"
						Value="Visible" />
				<Setter Property="Visibility"
						TargetName="Open_Arrow"
						Value="Collapsed" />
				<Setter Property="RenderTransform" TargetName="Close_Arrow">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform/>
							<SkewTransform/>
							<RotateTransform Angle="135"/>
							<TranslateTransform/>
						</TransformGroup>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="Fill" TargetName="Open_Arrow" Value="Gray"/>
				<Setter Property="Fill" TargetName="Close_Arrow" Value="Gray"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="AdderButton"
					 TargetType="{x:Type ToggleButton}">
		<Grid>
			<ContentPresenter />
		</Grid>
	</ControlTemplate>

	<Style x:Key="SectionExpander"
		   TargetType="{x:Type Expander}">
		<Setter Property="Background"
				Value="{DynamicResource LightBrush}" />
		<Setter Property="BorderBrush"
				Value="{DynamicResource NormalBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Grid Margin="0,0,0,10"
						  d:DesignWidth="191.25">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto"
										   x:Name="PropertyGridRow" />
							<RowDefinition Height="*"
										   x:Name="ContentRow" />
						</Grid.RowDefinitions>
						<Border Background="#FFBDBDBD"
							BorderBrush="{DynamicResource LightGreyBorderBrush}"
							BorderThickness="1"
							HorizontalAlignment="Left">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="20" />
									<ColumnDefinition MinWidth="160"/>
									<ColumnDefinition Width="20" />
								</Grid.ColumnDefinitions>
								<ToggleButton Template="{DynamicResource ExpanderToggleButton}"
                                    x:Name="expanderToggle"
									Background="{DynamicResource NormalBrush}"
									IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									OverridesDefaultStyle="True" />
								<ContentPresenter Grid.Column="1"
									Margin="4"
									RecognizesAccessKey="True"
									ContentSource="Header" />
								<ToggleButton Content="Properties"
									x:Name="showProperties"
									Template="{DynamicResource PropertiesExpandToggleButton}"
									Background="{DynamicResource NormalBrush}"
									Grid.Column="2"
									Visibility="{Binding Properties, Converter={StaticResource EnumerableToVisibilityConverter}}" />
							</Grid>
						</Border>
						<Border
							BorderBrush="{DynamicResource LightGreyBorderBrush}"
							BorderThickness="1" HorizontalAlignment="Stretch" Grid.RowSpan="3" Margin="0,20,0,0"
                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToHiddenConverter}, ElementName=expanderToggle}" />

						<Border Grid.Row="1"
								Background="{StaticResource PopupBackground}"
								BorderBrush="{StaticResource LightGreyBorderBrush}"
								BorderThickness="1"
								MaxWidth="600"
								HorizontalAlignment="Left"
								Padding="5"
								Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=showProperties}">
							<ItemsControl ItemsSource="{Binding Properties}">
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<ContentControl Content="{Binding}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</Border>

						<Border Visibility="Collapsed"
							Grid.Row="2"
							x:Name="ExpandSite"
							Background="{DynamicResource WindowBackgroundBrush}"
							BorderBrush="{DynamicResource SolidBorderBrush}"
							BorderThickness="1,0,1,1"
							CornerRadius="0,0,2,2"
							Padding="5">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded"
								 Value="True">
							<Setter Property="Visibility"
									Value="Visible"
									TargetName="ExpandSite" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter Property="Foreground"
									Value="{DynamicResource DisabledForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PropertyExpander"
		   TargetType="{x:Type Expander}">
		<Setter Property="Background"
				Value="{DynamicResource LightBrush}" />
		<Setter Property="BorderBrush"
				Value="{DynamicResource NormalBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Grid Margin="0"
						  d:DesignWidth="191.25">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*"
										   x:Name="ContentRow" />
						</Grid.RowDefinitions>
						<Grid HorizontalAlignment="Left">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="20" />
								<ColumnDefinition />
								<ColumnDefinition Width="20" />
							</Grid.ColumnDefinitions>
							<ToggleButton Template="{DynamicResource ExpanderToggleButton}"
										  Background="{DynamicResource NormalBrush}"
										  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										  OverridesDefaultStyle="True"
										  Margin="0,2,0,0"
										  FocusVisualStyle="{DynamicResource NoBoxFocusVisualStyle}" />
						</Grid>
						<Border Visibility="Collapsed"
								Grid.Row="1"
								x:Name="ExpandSite"
								Background="{DynamicResource WindowBackgroundBrush}"
								BorderBrush="{DynamicResource SolidBorderBrush}"
								BorderThickness="1,0,1,1"
								CornerRadius="0,0,2,2">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  Margin="{TemplateBinding Padding}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded"
								 Value="True">
							<Setter Property="Visibility"
									Value="Visible"
									TargetName="ExpandSite" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter Property="Foreground"
									Value="{DynamicResource DisabledForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="AdderExpander"
		   TargetType="{x:Type Expander}">
		<!--<Setter Property="Background"
				Value="{DynamicResource LightBrush}" />
		<Setter Property="BorderBrush"
				Value="{DynamicResource NormalBorderBrush}" /> -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Grid Margin="0"
						  d:DesignWidth="191.25">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*"
										   x:Name="ContentRow" />
						</Grid.RowDefinitions>
						<Grid HorizontalAlignment="Left">
							<CheckBox Template="{DynamicResource AdderButton}"
									  Controls:ToggleButtonExtensions.GroupName="BlockRadioButton"
									  Background="{DynamicResource NormalBrush}"
									  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									  OverridesDefaultStyle="True"
									  Controls:ElementModelContainer.IsAdderButton="True">
								<Canvas x:Name="AddButton"
										Width="15"
										Height="15"
										Clip="F1 M 0,0L 25,0L 25,25L 0,25L 0,0">
									<Canvas x:Name="Layer_1"
											Width="15"
											Height="15">
										<Ellipse x:Name="Ellipse"
												 Width="15"
												 Height="15"
												 Canvas.Left="-1.27157e-006"
												 Canvas.Top="0"
												 Stretch="Fill">
											<Ellipse.Fill>
												<RadialGradientBrush RadiusX="0.5"
																	 RadiusY="0.5"
																	 Center="0.5,0.5"
																	 GradientOrigin="0.5,0.5">
													<RadialGradientBrush.RelativeTransform>
														<TransformGroup />
													</RadialGradientBrush.RelativeTransform>
													<GradientStop Color="#FF00A800"
																  Offset="0" />
													<GradientStop Color="#FF1D711D"
																  Offset="0.888372" />
													<GradientStop Color="#FF3A3A3A"
																  Offset="1" />
												</RadialGradientBrush>
											</Ellipse.Fill>
										</Ellipse>
										<Path x:Name="Line"
											  Width="5"
											  Height="10.886"
											  Canvas.Left="5.031"
											  Stretch="Fill"
											  StrokeThickness="3"
											  StrokeStartLineCap="Round"
											  StrokeEndLineCap="Round"
											  StrokeLineJoin="Round"
											  Stroke="#FFFFFFFF"
											  Data="F1 M 12.4687,6L 12.4687,18.9167"
											  Canvas.Top="1.919" />
										<Path x:Name="Line_0"
											  Width="10.657"
											  Height="5"
											  Canvas.Left="2.312"
											  Canvas.Top="4.959"
											  Stretch="Fill"
											  StrokeThickness="3"
											  StrokeStartLineCap="Round"
											  StrokeEndLineCap="Round"
											  StrokeLineJoin="Round"
											  Stroke="#FFFFFFFF"
											  Data="F1 M 7,12.5L 18,12.5" />
									</Canvas>
								</Canvas>
							</CheckBox>
						</Grid>
						<Border Visibility="Collapsed"
								Grid.Row="1"
								x:Name="ExpandSite"
								Background="{DynamicResource WindowBackgroundBrush}"
								BorderBrush="{DynamicResource SolidBorderBrush}"
								BorderThickness="1,0,1,1"
								CornerRadius="0,0,2,2">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  Margin="{TemplateBinding Padding}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded"
								 Value="True">
							<Setter Property="Visibility"
									Value="Visible"
									TargetName="ExpandSite" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter Property="Foreground"
									Value="{DynamicResource DisabledForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NoBoxFocusVisualStyle"
		   TargetType="{x:Type Control}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Control}">
					<Grid />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="PropertiesExpandToggleButton"
					 TargetType="{x:Type ToggleButton}">
		<Grid x:Name="grid" HorizontalAlignment="Stretch" Width="18" Height="18">
			<TextBlock x:Name="textBlock_Copy" HorizontalAlignment="Center" VerticalAlignment="Center" Text="P" TextWrapping="Wrap" FontSize="9.333" Margin="1,0,0,1" Opacity="0" Foreground="Gray" FontWeight="Bold" FontStyle="Italic">
				<TextBlock.Effect>
					<BlurEffect Radius="8"/>
				</TextBlock.Effect>
			</TextBlock>
			<TextBlock x:Name="textBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Text="P" TextWrapping="Wrap" FontSize="9.333" Margin="1,0,0,1" FontWeight="Bold" FontStyle="Italic"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsFocused"
					 Value="True">
				<Setter Property="Opacity" TargetName="textBlock_Copy" Value="0"/>
			</Trigger>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="Opacity" TargetName="textBlock_Copy" Value="1"/>
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="true" >
				<Setter Property="Opacity" TargetName="textBlock_Copy" Value="1"/>
			</Trigger>
			<Trigger Property="IsChecked"
					 Value="true">
				<Setter Property="Opacity" TargetName="textBlock_Copy" Value="1"/>
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False"/>
		</ControlTemplate.Triggers>
	</ControlTemplate>
</ResourceDictionary>