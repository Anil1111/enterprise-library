<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:Controls="clr-namespace:Console.Wpf.Controls"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					mc:Ignorable="d">


	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Console.Wpf;component/Resources/Converters.xaml" />
		<ResourceDictionary Source="/Console.Wpf;component/Resources/Brushes.xaml" />
		<ResourceDictionary Source="/Console.Wpf;component/Resources/AdderStyles.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style TargetType="{x:Type Controls:ElementModelContainer}">
		<Setter Property="Margin"
				Value="0,0,40,7" />
		<Setter Property="Background"
				Value="White" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Controls:ElementModelContainer}">
					<Grid ScrollViewer.VerticalScrollBarVisibility="Disabled"
						  IsSharedSizeScope="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />							
						</Grid.RowDefinitions>
						<Border x:Name="contentBorder"
								BorderBrush="{DynamicResource LightGreyBorderBrush}"
								BorderThickness="1"
								Background="#FFF0F0F0"
								Padding="3"
								VerticalAlignment="Top"
								d:LayoutOverrides="Width, Height"
								Grid.ColumnSpan="2">
							<Grid VerticalAlignment="Top">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<ToggleButton Visibility="{Binding Content.Properties, Converter={StaticResource EnumerableToVisibilityConverter}, ElementName=contentPresenter, FallbackValue=Collapsed}"
											  x:Name="ShowProperties"
											  VerticalAlignment="Center"
											  Background="{DynamicResource NormalBrush}"
											  Command="{Binding Path=ToggleProperties, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Controls:ElementModelContainer}}}"
											  CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Controls:ElementModelContainer}}}"
											  Template="{DynamicResource PropertiesExpandToggleButton}"
											  Grid.Column="0" />
								<ContentPresenter x:Name="contentPresenter" 
												  Grid.Column="1"/>
							</Grid>
						</Border>

						<Border x:Name="PART_Adorner"
								BorderBrush="{DynamicResource AdornerStrokeBrush}"
								BorderThickness="1"
								Background="{DynamicResource AdornerFillBrush}"
								Visibility="Collapsed"
								VerticalAlignment="Top"
								IsHitTestVisible="False"
								Height="{Binding ElementName=contentBorder, Path=ActualHeight, Mode=OneWay}"
								Grid.ColumnSpan="2" />

						<Border Background="{StaticResource PopupBackground}"
									BorderBrush="{StaticResource LightGreyBorderBrush}"
									BorderThickness="1"
									Padding="2"
									Grid.ColumnSpan="3"
									Grid.Row="1"
									Visibility="{Binding ElementName=ShowProperties,Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
								<ItemsControl ItemsSource="{Binding Content.Properties, ElementName=contentPresenter}">
								<ItemsControl.Template>
									<ControlTemplate>
										<VirtualizingStackPanel IsItemsHost="True" />
									</ControlTemplate>
								</ItemsControl.Template>
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<ContentControl Content="{Binding}" />
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</Border>
						<Canvas Grid.Column="2"
								VerticalAlignment="Top"
								Margin="0,5,0,0">
							<Expander
								Background="{TemplateBinding Background}"
								Margin="3,0,0,0"
								Style="{DynamicResource AdderExpander}"
								IsExpanded="{Binding (Panel.ZIndex), Converter={StaticResource BooleanToZIndexConverter}, Mode=OneWayToSource, RelativeSource={RelativeSource AncestorType={x:Type Controls:ElementModelContainer}, Mode=FindAncestor}}"
								HorizontalAlignment="Right" Visibility="{Binding Content.ChildAdders, Converter={StaticResource EnumerableToVisibilityConverter}, ElementName=contentPresenter, FallbackValue=Collapsed}">
								<StackPanel>
									<Border Background="{StaticResource PopupBackground}"
										BorderBrush="{StaticResource LightGreyBorderBrush}"
										BorderThickness="1"
										Padding="5">
										<ListBox x:Name="adderList"
											ItemsSource="{Binding Content.ChildAdders, ElementName=contentPresenter}"
											ItemContainerStyle="{StaticResource AdderContainerStyle}">
											<ListBox.Template>
												<ControlTemplate>
													<ItemsPresenter />
												</ControlTemplate>
											</ListBox.Template>
										</ListBox>
									</Border>
									<Border Background="{StaticResource PopupBackground}"
										BorderBrush="{StaticResource LightGreyBorderBrush}"
										BorderThickness="1"
										Padding="5">
										<TextBlock x:Name="PART_HelpTextDisplay"
											Grid.Column="1"
											FontStyle="Italic"
											Visibility="Collapsed" />
									</Border>
								</StackPanel>
							</Expander>
						</Canvas>
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=Content, ElementName=contentPresenter, Converter={StaticResource TypeToVisibilityConverter}}"
									 Value="Header">
							<Setter Property="BorderBrush"
									Value="Transparent"
									TargetName="contentBorder" />
							<Setter Property="Background"
									Value="Transparent"
									TargetName="contentBorder" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>