<configuration>
  <configSections>
    <section name="validation" type="Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.ValidationSettings, Microsoft.Practices.EnterpriseLibrary.Validation" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data" />
  </configSections>
  <validation>
    <type assemblyName="ValidationQuickStart.BusinessEntities, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
      name="ValidationQuickStart.BusinessEntities.Address">
      <ruleset name="RuleSetB">
        <properties>
          <property name="City">
            <validator lowerBound="1" lowerBoundType="Inclusive" upperBound="30"
              upperBoundType="Inclusive" negated="false" messageTemplate=""
              messageTemplateResourceName="" messageTemplateResourceType=""
              tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.StringLengthValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
              name="String Length Validator" />
            <validator characterSet="1234567890!@#$%^&amp;*()-=" containsCharacter="Any"
              negated="true" messageTemplate="City may not contain numbers or punctuation characters"
              messageTemplateResourceName="" messageTemplateResourceType=""
              tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.ContainsCharactersValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
              name="Contains Characters Validator" />
            <validator negated="false" messageTemplate="" messageTemplateResourceName=""
              messageTemplateResourceType="" tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.NotNullValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
              name="Not Null Validator" />
          </property>
          <property name="Line1">
            <validator lowerBound="1" lowerBoundType="Inclusive" upperBound="0"
              upperBoundType="Ignore" negated="false" messageTemplate="" messageTemplateResourceName=""
              messageTemplateResourceType="" tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.StringLengthValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
              name="String Length Validator: 1+" />
          </property>
          <property name="Line2">
            <validator messageTemplate="Address Line 2 must be less than 50 characters long"
              messageTemplateResourceName="" messageTemplateResourceType=""
              tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.OrCompositeValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
              name="Or Composite Validator">
              <validator lowerBound="0" lowerBoundType="Inclusive" upperBound="50"
                upperBoundType="Inclusive" negated="false" messageTemplate=""
                messageTemplateResourceName="" messageTemplateResourceType=""
                tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.StringLengthValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
                name="String Length Validator : 0-50" />
              <validator negated="true" messageTemplate="" messageTemplateResourceName=""
                messageTemplateResourceType="" tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.NotNullValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
                name="Null Validator" />
            </validator>
          </property>
        </properties>
      </ruleset>
    </type>
    <type assemblyName="ValidationQuickStart.BusinessEntities, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
      name="ValidationQuickStart.BusinessEntities.Customer">
      <ruleset name="RuleSetB">
        <properties>
          <property name="Address">
            <validator targetRuleset="RuleSetB" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.ObjectValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
              name="Object Validator" />
          </property>
          <property name="DateOfBirth">
            <validator lowerBound="1969-01-01" lowerBoundType="Inclusive"
              upperBound="" upperBoundType="Ignore" negated="false" messageTemplate="Must be born after 1969"
              messageTemplateResourceName="" messageTemplateResourceType=""
              tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.DateTimeRangeValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
              name="Date Range Validator" />
          </property>
          <property name="Email">
            <validator pattern="\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*"
              options="None" patternResourceName="" patternResourceType=""
              messageTemplate="Invalid e-mail address" messageTemplateResourceName=""
              messageTemplateResourceType="" tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.RegexValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
              name="Regex Validator" />
          </property>
          <property name="FirstName">
            <validator lowerBound="0" lowerBoundType="Ignore" upperBound="20"
              upperBoundType="Inclusive" negated="false" messageTemplate="First name must be less than 20 characters"
              messageTemplateResourceName="" messageTemplateResourceType=""
              tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.StringLengthValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
              name="String Length Validator" />
          </property>
          <property name="LastName">
            <validator messageTemplate="LastName must start with X or end with z"
              messageTemplateResourceName="" messageTemplateResourceType=""
              tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.OrCompositeValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
              name="Or Composite Validator">
              <validator pattern="X.*" options="None" patternResourceName=""
                patternResourceType="" messageTemplate="Last name must start with &quot;X&quot;"
                messageTemplateResourceName="" messageTemplateResourceType=""
                tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.RegexValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
                name="Starts with X RegEx Validator" />
              <validator pattern=".*z" options="None" patternResourceName=""
                patternResourceType="" messageTemplate="Last name must end with &quot;z&quot;"
                messageTemplateResourceName="" messageTemplateResourceType=""
                tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.RegexValidator, Microsoft.Practices.EnterpriseLibrary.Validation"
                name="Ends with z RegEx Validator" />
            </validator>
          </property>
          <property name="RewardPoints">
            <validator Divisor="10" messageTemplate="" messageTemplateResourceName=""
              messageTemplateResourceType="" tag="Warning" type="ValidationQuickStart.CustomValidators.DivisibleByValidator, ValidationQuickStart.CustomValidators, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
              name="Divisible By 10" />
          </property>
        </properties>
      </ruleset>
    </type>
  </validation>
</configuration>
